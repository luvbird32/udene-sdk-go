openapi: 3.0.0
info:
  title: Fraud Detection API
  version: '1.0'
  description: API for real-time fraud detection and monitoring
servers:
  - url: https://api.example.com/v1
    description: Production server
paths:
  /predict:
    post:
      summary: Predict fraud probability
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudPredictionRequest'
      responses:
        '200':
          description: Fraud prediction result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudPredictionResponse'

  /privacy/data-request:
    post:
      summary: Submit data access or deletion request (GDPR/CCPA)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivacyRequest'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivacyResponse'

  /privacy/retention-policy:
    put:
      summary: Update data retention policy
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetentionPolicy'
      responses:
        '200':
          description: Policy updated successfully

components:
  schemas:
    FraudPredictionRequest:
      type: object
      properties:
        transaction_amount:
          type: number
          format: float
        merchant_id:
          type: string
        customer_id:
          type: string
        timestamp:
          type: string
          format: date-time
        location:
          type: string
        device_id:
          type: string
        ip_address:
          type: string
        transaction_type:
          type: string
        card_present:
          type: boolean
        recurring:
          type: boolean
      required:
        - transaction_amount
        - merchant_id
        - customer_id
        - timestamp
        - location
        - device_id
        - ip_address
        - transaction_type
        - card_present
        - recurring

    FraudPredictionResponse:
      type: object
      properties:
        probability:
          type: number
          format: float
          description: Probability of fraud (0-1)
        is_fraudulent:
          type: boolean
          description: True if transaction is likely fraudulent
        confidence:
          type: number
          format: float
          description: Confidence in the prediction (0-1)

    PrivacyRequest:
      type: object
      properties:
        requestType:
          type: string
          enum: [access, deletion]
        userId:
          type: string
        email:
          type: string
        region:
          type: string
          enum: [EU, California, Other]
      required:
        - requestType
        - userId
        - email
        - region

    PrivacyResponse:
      type: object
      properties:
        requestId:
          type: string
        estimatedCompletionTime:
          type: string
          format: date-time
        status:
          type: string
          enum: [pending, processing, completed]

    RetentionPolicy:
      type: object
      properties:
        dataType:
          type: string
          enum: [transaction, userProfile, fraudAlert]
        retentionPeriod:
          type: integer
          description: Retention period in days
        anonymizationEnabled:
          type: boolean
        region:
          type: string
          enum: [EU, California, Global]
      required:
        - dataType
        - retentionPeriod
        - anonymizationEnabled
        - region

  # ... keep existing code (security schemes)
