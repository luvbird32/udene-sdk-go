import React, { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { ChevronDown, ChevronUp } from "lucide-react";
import { VulnerabilityScan } from "../../types";

interface VulnerabilityScanItemProps {
  scan: VulnerabilityScan;
}

export const VulnerabilityScanItem = ({ scan }: VulnerabilityScanItemProps) => {
  const [isExpanded, setIsExpanded] = useState(false);

  return (
    <Card className="p-4 space-y-4">
      <div className="flex justify-between items-center">
        <div>
          <h4 className="text-lg font-semibold">
            {scan.scan_type} Scan
          </h4>
          <p className="text-sm text-muted-foreground">
            Started: {new Date(scan.start_time).toLocaleString()}
          </p>
        </div>
        <div className="text-sm font-medium">
          Status: {scan.status}
        </div>
      </div>

      <div className="grid grid-cols-2 gap-4">
        <div>
          <p className="text-sm font-medium">Total Vulnerabilities</p>
          <p className="text-2xl font-bold">{scan.total_vulnerabilities}</p>
        </div>
        <div>
          <p className="text-sm font-medium">Severity Breakdown</p>
          <div className="space-y-1">
            <p className="text-xs">Critical: {scan.severity_breakdown.critical}</p>
            <p className="text-xs">High: {scan.severity_breakdown.high}</p>
            <p className="text-xs">Medium: {scan.severity_breakdown.medium}</p>
            <p className="text-xs">Low: {scan.severity_breakdown.low}</p>
          </div>
        </div>
      </div>

      {scan.findings && scan.findings.length > 0 && (
        <Button
          variant="outline"
          className="w-full mt-2"
          onClick={() => setIsExpanded(!isExpanded)}
        >
          {isExpanded ? (
            <ChevronUp className="h-4 w-4 mr-2" />
          ) : (
            <ChevronDown className="h-4 w-4 mr-2" />
          )}
          {isExpanded ? "Hide" : "Show"} Detailed Findings
        </Button>
      )}

      {isExpanded && scan.findings && (
        <div className="space-y-4 mt-4 border-t pt-4">
          {scan.findings.map((finding) => (
            <div key={finding.id} className="border-b pb-4 last:border-0">
              <h5 className="font-medium">{finding.name}</h5>
              <p className="text-sm text-muted-foreground mt-1">
                {finding.description}
              </p>
              <div className="mt-2">
                <span className={`text-xs px-2 py-1 rounded-full ${
                  finding.severity === 'critical' ? 'bg-red-100 text-red-800' :
                  finding.severity === 'high' ? 'bg-orange-100 text-orange-800' :
                  finding.severity === 'medium' ? 'bg-yellow-100 text-yellow-800' :
                  'bg-green-100 text-green-800'
                }`}>
                  {finding.severity}
                </span>
              </div>
            </div>
          ))}
        </div>
      )}
    </Card>
  );
};