/**
 * @component SeverityBreakdown
 * @description Displays a breakdown of vulnerability severities in a security scan.
 * Shows the distribution of vulnerabilities across different severity levels (Critical,
 * High, Medium, Low) with visual indicators and counts.
 *
 * @param {Object} props - Component props
 * @param {Object} props.breakdown - Object containing counts for each severity level
 * @param {number} props.breakdown.critical - Number of critical vulnerabilities
 * @param {number} props.breakdown.high - Number of high severity vulnerabilities
 * @param {number} props.breakdown.medium - Number of medium severity vulnerabilities
 * @param {number} props.breakdown.low - Number of low severity vulnerabilities
 * @param {number} props.total - Total number of vulnerabilities across all severities
 *
 * @example
 * ```tsx
 * const breakdown = {
 *   critical: 2,
 *   high: 3,
 *   medium: 4,
 *   low: 1
 * };
 * 
 * <SeverityBreakdown breakdown={breakdown} total={10} />
 * ```
 */
import { Progress } from "@/components/ui/progress";

interface SeverityBreakdownProps {
  breakdown: {
    critical: number;
    high: number;
    medium: number;
    low: number;
  };
  total: number;
}

export const SeverityBreakdown = ({ breakdown, total }: SeverityBreakdownProps) => {
  const getPercentage = (count: number) => {
    return total > 0 ? (count / total) * 100 : 0;
  };

  return (
    <div className="space-y-4">
      <div className="space-y-2">
        <div className="flex items-center justify-between">
          <span className="text-sm font-medium">Critical</span>
          <Progress value={getPercentage(breakdown.critical)} className="w-2/3 bg-red-200">
            <div className="h-full bg-red-500 transition-all" style={{ width: `${getPercentage(breakdown.critical)}%` }} />
          </Progress>
          <span className="text-sm">{breakdown.critical}</span>
        </div>

        <div className="flex items-center justify-between">
          <span className="text-sm font-medium">High</span>
          <Progress value={getPercentage(breakdown.high)} className="w-2/3 bg-orange-200">
            <div className="h-full bg-orange-500 transition-all" style={{ width: `${getPercentage(breakdown.high)}%` }} />
          </Progress>
          <span className="text-sm">{breakdown.high}</span>
        </div>

        <div className="flex items-center justify-between">
          <span className="text-sm font-medium">Medium</span>
          <Progress value={getPercentage(breakdown.medium)} className="w-2/3 bg-yellow-200">
            <div className="h-full bg-yellow-500 transition-all" style={{ width: `${getPercentage(breakdown.medium)}%` }} />
          </Progress>
          <span className="text-sm">{breakdown.medium}</span>
        </div>

        <div className="flex items-center justify-between">
          <span className="text-sm font-medium">Low</span>
          <Progress value={getPercentage(breakdown.low)} className="w-2/3 bg-blue-200">
            <div className="h-full bg-blue-500 transition-all" style={{ width: `${getPercentage(breakdown.low)}%` }} />
          </Progress>
          <span className="text-sm">{breakdown.low}</span>
        </div>
      </div>
    </div>
  );
};