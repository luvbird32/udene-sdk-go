import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { useAuth } from '@/hooks/useAuth';
import { ScanProgress } from './vulnerability-scan/ScanProgress';
import { ScanResults } from './vulnerability-scan/ScanResults';
import { useVulnerabilityScan } from './vulnerability-scan/useVulnerabilityScan';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { AlertCircle } from 'lucide-react';

export const VulnerabilityScanning = () => {
  const { user } = useAuth();
  const [scanType] = useState('full');
  const [services] = useState(['web', 'api']);

  const {
    scanProgress,
    scanMutation,
    isScanning,
    scanError,
    recentScans,
    isLoadingScans,
    scansError
  } = useVulnerabilityScan(user?.id);

  const handleScan = () => {
    if (!user?.id) return;
    scanMutation.mutate({ scanType, services });
  };

  // Show auth required message if no user
  if (!user?.id) {
    return (
      <Alert variant="destructive">
        <AlertCircle className="h-4 w-4" />
        <AlertDescription>
          You must be logged in to perform vulnerability scans.
        </AlertDescription>
      </Alert>
    );
  }

  return (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <h2 className="text-2xl font-bold">Vulnerability Scanning</h2>
        <Button 
          onClick={handleScan} 
          disabled={isScanning}
        >
          {isScanning ? 'Scanning...' : 'Start Scan'}
        </Button>
      </div>

      {scanProgress > 0 && <ScanProgress progress={scanProgress} />}

      {scanError && (
        <Alert variant="destructive">
          <AlertCircle className="h-4 w-4" />
          <AlertDescription>
            {scanError instanceof Error ? scanError.message : 'An error occurred during the scan'}
          </AlertDescription>
        </Alert>
      )}

      <ScanResults 
        results={recentScans}
        isLoading={isLoadingScans}
        error={scansError instanceof Error ? scansError : null}
      />
    </div>
  );
};