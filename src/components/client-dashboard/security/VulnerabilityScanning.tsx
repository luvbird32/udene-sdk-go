import { Card } from "@/components/ui/card";
import { useToast } from "@/hooks/use-toast";
import { useVulnerabilityScans } from "../security/hooks/useVulnerabilityScans";
import { VulnerabilityScanHeader } from "./components/vulnerability-scan/ScanHeader";
import { VulnerabilityScanList } from "./components/vulnerability-scan-item/VulnerabilityScanItem";
import { ScanQuickActions } from "./components/ScanQuickActions";
import ErrorBoundary from "@/components/ErrorBoundary";

export const VulnerabilityScanning = () => {
  const { toast } = useToast();
  const { 
    scans, 
    isLoading, 
    error, 
    startScan, 
    isScanning 
  } = useVulnerabilityScans();

  const handleStartScan = async () => {
    try {
      await startScan();
      toast({
        title: "Scan Started",
        description: "The vulnerability scan has been initiated.",
      });
    } catch (error) {
      console.error("Failed to start scan:", error);
      toast({
        title: "Error",
        description: "Failed to start vulnerability scan. Please try again.",
        variant: "destructive",
      });
    }
  };

  if (error) {
    return (
      <Card className="p-6">
        <div className="text-center text-red-500">
          <p>Error loading vulnerability scans: {error.message}</p>
        </div>
      </Card>
    );
  }

  return (
    <ErrorBoundary>
      <Card className="p-6 space-y-6">
        <VulnerabilityScanHeader 
          onStartScan={handleStartScan} 
          isScanning={isScanning}
        />
        <ScanQuickActions 
          onStartScan={handleStartScan} 
          isScanning={isScanning}
        />
        <VulnerabilityScanList 
          scans={scans} 
          isLoading={isLoading}
        />
      </Card>
    </ErrorBoundary>
  );
};