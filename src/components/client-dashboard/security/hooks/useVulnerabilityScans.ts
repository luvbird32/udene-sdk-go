import { useQuery } from "@tanstack/react-query";
import { supabase } from "@/integrations/supabase/client";
import { useAuth } from "@/hooks/useAuth";
import { VulnerabilityScan } from "../types";

export const useVulnerabilityScans = () => {
  const { user } = useAuth();
  
  return useQuery({
    queryKey: ["vulnerability-scans", user?.id],
    queryFn: async () => {
      if (!user?.id) {
        throw new Error("User not authenticated");
      }

      const { data, error } = await supabase
        .from('vulnerability_scans')
        .select('*')
        .eq('user_id', user.id)
        .order('created_at', { ascending: false })
        .limit(5);

      if (error) {
        console.error("Error fetching scans:", error);
        throw error;
      }

      return data as VulnerabilityScan[];
    },
    enabled: !!user?.id,
  });
};