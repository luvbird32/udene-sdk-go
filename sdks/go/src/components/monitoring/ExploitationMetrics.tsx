import { useQuery } from "@tanstack/react-query";
import { Card } from "@/components/ui/card";
import { MetricCard } from "@/components/client-dashboard/analytics/components/MetricCard";
import { supabase } from "@/integrations/supabase/client";
import { Bot, Users, Activity, Shield } from "lucide-react";

export const ExploitationMetrics = () => {
  const { data: metrics, isLoading } = useQuery({
    queryKey: ["exploitation-metrics"],
    queryFn: async () => {
      const { data, error } = await supabase
        .from('client_metrics')
        .select('*')
        .eq('metric_name', 'exploitation_patterns')
        .order('created_at', { ascending: false })
        .limit(1)
        .maybeSingle();

      if (error) {
        console.error('Error fetching exploitation metrics:', error);
        throw error;
      }

      return data;
    },
    refetchInterval: 30000, // Refresh every 30 seconds
  });

  const exploitationData = [
    {
      title: "Concurrent Sessions",
      value: `${metrics?.concurrent_sessions || 0}`,
      icon: Users,
      description: "Active user sessions",
    },
    {
      title: "API Request Velocity",
      value: `${metrics?.api_request_velocity || 0}/hr`,
      icon: Activity,
      description: "API calls per hour",
    },
    {
      title: "Bot Detection",
      value: metrics?.unusual_device_patterns ? "Active" : "Normal",
      icon: Bot,
      description: "Automated behavior detection",
    },
    {
      title: "System Load",
      value: metrics?.resource_usage_spikes ? "High" : "Normal",
      icon: Shield,
      description: "Current system load",
    },
  ];

  return (
    <Card className="p-6">
      <h2 className="text-lg font-semibold mb-4">System Exploitation Monitoring</h2>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        {exploitationData.map((metric, index) => (
          <MetricCard
            key={index}
            title={metric.title}
            value={metric.value}
            icon={metric.icon}
            description={metric.description}
          />
        ))}
      </div>
    </Card>
  );
};