import { Button } from "@/components/ui/button";
import { FileDown } from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import { VulnerabilityScan } from "../../types";

interface DownloadReportProps {
  scan: VulnerabilityScan;
}

export const DownloadReport = ({ scan }: DownloadReportProps) => {
  const { toast } = useToast();

  const handleDownload = () => {
    try {
      // Format the data for download
      const reportData = {
        scan_id: scan.id,
        scan_type: scan.scan_type,
        timestamp: scan.start_time,
        duration: scan.scan_duration,
        total_vulnerabilities: scan.total_vulnerabilities,
        severity_breakdown: scan.severity_breakdown,
        findings: scan.findings,
      };

      // Create and download file
      const blob = new Blob([JSON.stringify(reportData, null, 2)], {
        type: "application/json",
      });
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download = `vulnerability-scan-${scan.id}.json`;
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      document.body.removeChild(a);

      toast({
        title: "Report Downloaded",
        description: "The vulnerability scan report has been downloaded successfully.",
      });
    } catch (error) {
      console.error("Download error:", error);
      toast({
        title: "Download Failed",
        description: "There was an error downloading the report. Please try again.",
        variant: "destructive",
      });
    }
  };

  return (
    <Button
      onClick={handleDownload}
      variant="outline"
      size="sm"
      className="ml-auto"
    >
      <FileDown className="h-4 w-4 mr-2" />
      Download Report
    </Button>
  );
};