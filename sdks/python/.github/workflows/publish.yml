# For example, to publish JavaScript SDK v1.0.1:
git tag js-v1.0.1
git push origin js-v1.0.1
& "C:\Program Files\Git\cmd\git.exe" push origin js-v1.0.1
name: Publish Python SDK

on:
  push:
    tags:
      - 'py-v*.*.*'  # Will trigger on tags like py-v1.0.0, py-v1.2.3, etc.

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine build
          pip install -e .
        working-directory: ./sdks/python

      - name: Run tests
        run: |
          pip install pytest
          pytest
        working-directory: ./sdks/python
        if: ${{ false }}  # Disabled until tests are added

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF_NAME#py-v}" >> $GITHUB_OUTPUT

      - name: Update version in files
        run: |
          # Update version in __init__.py
          sed -i "s/__version__ = '.*'/__version__ = '${{ steps.extract_version.outputs.VERSION }}'/g" udene_sdk/__init__.py
          # Update version in setup.py
          sed -i "s/version=\".*\"/version=\"${{ steps.extract_version.outputs.VERSION }}\"/g" setup.py
        working-directory: ./sdks/python

      - name: Build package
        run: python -m build
        working-directory: ./sdks/python

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ./sdks/python/dist/
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Python SDK v${{ steps.extract_version.outputs.VERSION }}
          body: |
            Release of Python SDK version ${{ steps.extract_version.outputs.VERSION }}
            
            ## Changes
            <!-- Add release notes here -->
            
            ## Installation
            ```bash
            pip install udene-sdk
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}