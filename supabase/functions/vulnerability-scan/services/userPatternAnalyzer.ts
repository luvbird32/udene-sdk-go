import { ServiceResult, Finding } from "../types";

export async function analyzeUserPatterns(
  supabaseClient: any,
  userId: string
): Promise<ServiceResult> {
  const { data: userPatterns, error } = await supabaseClient
    .from('user_creation_patterns')
    .select('*');

  if (error) throw error;

  const findings: Finding[] = [];

  userPatterns?.forEach(pattern => {
    if (pattern.user_count > 2) {
      findings.push({
        name: "Bulk Account Creation",
        description: `Multiple accounts created in rapid succession`,
        severity: pattern.user_count > 5 ? "critical" : "high",
        affected_component: "registration",
        details: {
          ip_address: pattern.ip_address,
          account_count: pattern.user_count,
          time_span: {
            first: pattern.first_creation,
            last: pattern.last_creation
          },
          user_ids: pattern.user_ids
        }
      });
    }
  });

  return {
    service_type: 'user_pattern_analysis',
    findings
  };
}