import { ServiceResult, Finding } from "../types.ts";

export function analyzeServices(
  services: Array<{ service_type: string; settings: Record<string, unknown> }>,
  isDeepScan: boolean
): ServiceResult[] {
  console.log('Analyzing services:', services);
  
  return services.map(service => {
    const findings: Finding[] = [];
    
    // Basic configuration check
    if (Object.keys(service.settings).length === 0) {
      findings.push({
        name: 'Unconfigured Service',
        description: `Service ${service.service_type} has no configuration settings`,
        severity: 'medium',
        affected_component: service.service_type,
        remediation_steps: ['Configure service settings'],
        discovered_at: new Date().toISOString()
      });
    }

    // Deep scan additional checks
    if (isDeepScan) {
      // Add more thorough service checks for deep scans
      findings.push({
        name: 'Service Security Audit',
        description: `Deep scan security audit for ${service.service_type}`,
        severity: 'low',
        affected_component: service.service_type,
        remediation_steps: ['Review service security settings'],
        discovered_at: new Date().toISOString()
      });
    }

    return {
      service_type: service.service_type,
      findings
    };
  });
}