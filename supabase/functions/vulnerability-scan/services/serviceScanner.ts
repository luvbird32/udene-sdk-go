import { ServiceResult, ServiceFinding } from "../types.ts";

export function analyzeServices(
  services: Array<{ service_type: string; settings: Record<string, unknown> }>,
  isDeepScan: boolean
): ServiceResult[] {
  const results: ServiceResult[] = [];
  const vulnerabilityThreshold = isDeepScan ? 0.5 : 0.7;

  for (const service of services) {
    const findings: ServiceFinding[] = [];
    
    // Simulated service security check
    const riskScore = Math.random();
    if (riskScore > vulnerabilityThreshold) {
      findings.push({
        id: crypto.randomUUID(),
        service: service.service_type,
        description: `Potential security configuration issue in ${service.service_type}`,
        severity: riskScore > 0.9 ? 'critical' : riskScore > 0.8 ? 'high' : riskScore > 0.6 ? 'medium' : 'low',
        impact: `Possible security impact on ${service.service_type} service`,
        remediation: `Review and update ${service.service_type} service configuration`
      });
    }

    if (findings.length > 0) {
      results.push({
        service: service.service_type,
        findings
      });
    }
  }

  return results;
}