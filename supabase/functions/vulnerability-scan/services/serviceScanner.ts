import { ServiceConfig, ServiceAnalysis, Finding } from '../types.ts';

export const analyzeServices = (
  services: ServiceConfig[],
  isDeepScan: boolean
): ServiceAnalysis[] => {
  return services.map(service => analyzeService(service, isDeepScan));
};

const analyzeService = (service: ServiceConfig, isDeepScan: boolean): ServiceAnalysis => {
  const findings: Finding[] = [];
  const riskScore = Math.random();
  const threshold = isDeepScan ? 0.5 : 0.7;

  if (riskScore > threshold) {
    findings.push({
      id: crypto.randomUUID(),
      title: `Configuration risk in ${service.name}`,
      description: `Potential security misconfiguration detected in ${service.type} service`,
      severity: riskScore > 0.8 ? 'critical' : riskScore > 0.7 ? 'high' : 'medium',
      recommendation: 'Review service configuration and apply security best practices'
    });
  }

  return {
    serviceName: service.name,
    findings,
    riskLevel: riskScore > 0.8 ? 'high' : riskScore > 0.6 ? 'medium' : 'low'
  };
};