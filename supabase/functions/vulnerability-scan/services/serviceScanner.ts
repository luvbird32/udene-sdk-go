import { ServiceConfig, ServiceAnalysis } from '../types.ts';

export const analyzeServices = (
  services: ServiceConfig[],
  scanType: 'quick' | 'deep'
): ServiceAnalysis => {
  const findings = [];
  const severityBreakdown = {
    critical: 0,
    high: 0,
    medium: 0,
    low: 0
  };

  if (scanType === 'deep') {
    for (const service of services) {
      if (Math.random() > 0.6) {
        const severity = Math.random() > 0.5 ? 'high' : 'medium';
        findings.push({
          id: crypto.randomUUID(),
          name: `${service.service_type} Configuration Issue`,
          description: `Security configuration analysis revealed potential issues in ${service.service_type} service setup`,
          severity,
          affected_component: service.service_type,
          remediation_steps: [
            'Review service configuration',
            'Update security settings',
            'Enable additional security features'
          ],
          references: [
            'https://security.best-practices.com',
            'https://owasp.org/security-guidelines'
          ],
          discovered_at: new Date().toISOString()
        });
        severityBreakdown[severity]++;
      }
    }
  }

  return { findings, severityBreakdown };
};