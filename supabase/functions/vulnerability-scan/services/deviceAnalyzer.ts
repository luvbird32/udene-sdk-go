import { ServiceResult, Finding } from "../types.ts";

export async function analyzeDevicePatterns(
  supabaseClient: any,
  userId: string
): Promise<ServiceResult> {
  const { data: devicePatterns, error } = await supabaseClient
    .from('device_fingerprints')
    .select('*')
    .eq('user_id', userId);

  if (error) throw error;

  const findings: Finding[] = [];

  // Analyze device patterns
  if (devicePatterns && devicePatterns.length > 0) {
    const suspiciousDevices = devicePatterns.filter(device => device.risk_score > 70);
    
    suspiciousDevices.forEach(device => {
      findings.push({
        name: "Suspicious Device Pattern",
        description: "Device associated with high-risk behavior",
        severity: device.risk_score > 90 ? "critical" : "high",
        affected_component: "device",
        details: {
          fingerprint: device.fingerprint_hash,
          risk_score: device.risk_score,
          last_seen: device.last_seen,
          suspicious_indicators: device.is_suspicious
        }
      });
    });
  }

  return {
    service_type: 'device_analysis',
    findings
  };
}