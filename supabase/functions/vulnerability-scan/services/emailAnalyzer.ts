import { ServiceResult, Finding } from "../types.ts";

export async function analyzeEmailPatterns(
  supabaseClient: any,
  userId: string
): Promise<ServiceResult> {
  const { data: emailPatterns, error } = await supabaseClient
    .from('email_reputation')
    .select('*')
    .order('risk_score', { ascending: false });

  if (error) throw error;

  const findings: Finding[] = [];

  emailPatterns?.forEach(pattern => {
    if (pattern.risk_score > 70) {
      findings.push({
        name: "High-Risk Email Pattern",
        description: "Email associated with suspicious activity",
        severity: pattern.risk_score > 90 ? "critical" : "high",
        affected_component: "email",
        details: {
          email: pattern.email,
          risk_score: pattern.risk_score,
          platform_occurrences: pattern.platform_occurrences,
          fraud_flags: pattern.fraud_flags
        }
      });
    }
  });

  return {
    service_type: 'email_analysis',
    findings
  };
}